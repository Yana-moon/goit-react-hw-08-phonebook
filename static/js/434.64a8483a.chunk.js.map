{"version":3,"file":"static/js/434.64a8483a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getFilterContacts = state => state.filter;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const LabelForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const InputForm = styled.input`\n  height: 20px;\n  width: 350px;\n  padding: 5px;\n  border: 1px solid #b7b7b7;\n  border-radius: 4px;\n`;\n\nexport const ButtonForm = styled.button`\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  font-weight: 500;\n  font-size: 14px;\n  border-radius: 4px;\n  border-color: #0a4ff0;\n  background-color: #f9fae6;\n  :hover,\n  :focus {\n    background-color: #5d27db;\n  }\n`;","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { ButtonForm, Form, InputForm, LabelForm } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  // При вводі у два поля інпуту( name, number) змінюємо значення у state\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') setName(value);\n    else if (name === 'number') setNumber(value);\n  };\n\n  const addNewContact = () => {\n    let newContact = {\n      number,\n      name,\n    };\n\n    const newContactName = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase().trim()\n    );\n\n    if (newContactName) {\n      return toast.error(`${newContact.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n      toast('Success! This contact will be added to your Phonebook.', {\n        icon: '👏',\n      });\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    addNewContact();\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <LabelForm>\n        Name\n        <InputForm\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n        </LabelForm>\n      <LabelForm>\n        Number\n        <InputForm\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </LabelForm>\n      <ButtonForm type=\"submit\">Add contact</ButtonForm>\n    </Form>\n  );\n};","import styled from 'styled-components';\n\nexport const ListContactText = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const ButtonDelete = styled.button`\n  width: 60px;\n  height: 30px;\n  padding: 5px;\n  font-weight: 500;\n  font-size: 14px;\n  border-radius: 4px;\n  border-color: #0a4ff0;\n  background-color: #f9fae6;\n`;","import { ButtonDelete, ListContactText } from './ContactListItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <ListContactText>\n        {contact.name}: {contact.number}\n      </ListContactText>\n      <ButtonDelete\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(contact.id))}\n      >\n        Delete\n      </ButtonDelete>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};","import styled from 'styled-components';\n\nexport const ListContacts = styled.ul`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n`;\n\nexport const ListContactItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  width: 90%;\n  margin-top: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\nborder-radius: 4px;\nbackground-color: grey;\nopacity: 0.5;\ncursor: pointer;\n&:hover {\n  transform: scale(1.2);\nopacity: 1;\ncolor: red;\n}\n`","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilterContacts } from 'redux/contacts/selectors';\nimport {\n  ListContactItem,\n  ListContacts,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n\n  const filter = useSelector(getFilterContacts);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ListContacts>\n      {visibleContacts.map(contact => (\n        <ListContactItem key={contact.id}>\n          <ContactListItem contact={contact} />\n        </ListContactItem>\n      ))}\n    </ListContacts>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperFilter = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextFilter = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const InputFilter = styled.input`\n  height: 20px;\n  width: 350px;\n  padding: 5px;\n  margin-top: 10px;\n  border: 1px solid #b7b7b7;\n  border-radius: 4px;\n`;","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { getFilterContacts } from 'redux/contacts/selectors';\nimport { TextFilter, InputFilter, WrapperFilter } from './Filter.styled';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterContacts);\n\n  const handleFindName = evt => {\n    const { value } = evt.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <WrapperFilter>\n      <TextFilter>Find Contacts by name</TextFilter>\n      <label>\n        <InputFilter\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          onChange={handleFindName}\n          value={filter}\n        />\n      </label>\n    </WrapperFilter>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const WrapperFormName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  /* margin: 0px 0px 0px 400px; */\n  padding: 20px;\n  width: 400px;\n  height: 350px;\n  border-radius: 5px;\n  background-color: #fcf797;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n\nexport const WrapperFormContacts = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: baseline;\n  gap: 20px;\n  /* margin: 0px 0px 0px 400px; */\n  padding: 20px;\n  width: 400px;\n  height: 350px;\n  /* max-height: max-content; */\n  border-radius: 5px;\n  background-color: #fcf797;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: #f2f2e1;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Message = styled.h5`\ndisplay: flex;\njustify-content: center;\nwidth: 90%;\n/* background-color: #fff; */\nmargin-left: auto;\nmargin-right: auto;\n`","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  FormContainer,\n  WrapperFormName,\n  WrapperFormContacts,\n  ContactsWrapper,\n  Message\n} from './Contacts.styled';\n\nexport default function  Contacts()  {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactsWrapper>\n      <FormContainer>\n      <WrapperFormName>\n            <ContactForm />\n            </WrapperFormName>\n            <WrapperFormContacts>\n            <Filter />\n            {isLoading && <Message>Is Loading...</Message>}\n        {error && <Message>{error}</Message>}\n        {items.length > 0 ? (\n            <ContactList />\n            ) : (\n              <Message>There aren't any contacts...</Message>\n            )}\n          </WrapperFormContacts>\n        </FormContainer>\n        </ContactsWrapper>\n    </>\n  );\n};\n"],"names":["getContacts","state","contacts","getFilterContacts","filter","Form","styled","LabelForm","InputForm","ButtonForm","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","target","value","onSubmit","e","preventDefault","newContact","find","contact","toLowerCase","trim","toast","addContact","icon","addNewContact","type","placeholder","pattern","title","required","onChange","ListContactText","ButtonDelete","ContactListItem","onClick","deleteContact","id","ListContacts","ListContactItem","ContactList","visibleContacts","includes","map","WrapperFilter","TextFilter","InputFilter","Filter","setFilter","FormContainer","WrapperFormName","WrapperFormContacts","ContactsWrapper","Message","Contacts","items","isLoading","error","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}